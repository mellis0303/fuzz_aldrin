[profile.default]
# Source and output paths
src = "contracts"
out = "out"
libs = ["lib"]
test = "test/contracts"
script = "script"
cache_path = "cache"
broadcast = "broadcast"

# Compiler settings
solc = "0.8.27"
optimizer = true
optimizer_runs = 200
via_ir = false
evm_version = "paris"
auto_detect_solc = true
auto_detect_remappings = true

# Testing settings
verbosity = 2
fuzz.runs = 256
invariant.runs = 256
ffi = true
sender = "0x1804c8AB1F12E6bbf3894d4083f33e07309d1f38"
tx_origin = "0x1804c8AB1F12E6bbf3894d4083f33e07309d1f38"
initial_balance = "0xffffffffffffffffffffffff"
block_number = 1
block_timestamp = 1
block_difficulty = 0
block_prevrandao = "0x0000000000000000000000000000000000000000000000000000000000000000"
block_coinbase = "0x0000000000000000000000000000000000000000"
block_gas_limit = "30000000"
gas_price = 0
base_fee = 0
# chain_id = 31337

# Fork settings (optional - uncomment to use)
# fork_url = "${FORK_URL}"
# fork_block_number = 19000000
# fork_chain_id = 1

# Etherscan settings
# etherscan_api_key = "${ETHERSCAN_API_KEY}"

# RPC endpoints (optional - uncomment to use)
# eth_rpc_url = "${ETH_RPC_URL}"
# polygon_rpc_url = "${POLYGON_RPC_URL}"
# arbitrum_rpc_url = "${ARBITRUM_RPC_URL}"
# optimism_rpc_url = "${OPTIMISM_RPC_URL}"
# base_rpc_url = "${BASE_RPC_URL}"

# Formatter settings
[fmt]
line_length = 120
tab_width = 4
bracket_spacing = true
int_types = "long"
multiline_func_header = "all"
quote_style = "double"
number_underscore = "thousands"
wrap_comments = true

# Documentation settings
[doc]
out = "docs"
title = "Fuzz-Aldrin Test Contracts"
book = "https://book.getfoundry.sh/"
homepage = "https://github.com/yourusername/Fuzz-Aldrin"

# Profile for testing vulnerable contracts
[profile.vulnerable]
optimizer = false
via_ir = false
# Lower optimizer runs to test gas-inefficient patterns
optimizer_runs = 1

# Profile for testing optimized contracts
[profile.optimized]
optimizer = true
optimizer_runs = 1000000
via_ir = true

# Profile for testing different Solidity versions
[profile.legacy]
solc = "0.4.26"
evm_version = "byzantium"

[profile.modern]
solc = "0.8.27"
evm_version = "shanghai"

# Remappings (add as needed)
remappings = [
    "@openzeppelin/=lib/openzeppelin-contracts/",
    "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
    "@chainlink/=lib/chainlink/",
    "@uniswap/=lib/",
    "@eigenlayer-contracts/=lib/eigenlayer-contracts/",
    "@hourglass-monorepo/=lib/hourglass-monorepo/",
    "@project/=contracts/src/"
]

# Ignore patterns
ignored_error_codes = [
    2072,  # Unused local variable
    5574,  # Contract code size
]

# Build info
build_info = true
build_info_path = "build-info"

# Extra output
extra_output = [
    "abi",
    "evm.bytecode",
    "evm.deployedBytecode",
    "evm.methodIdentifiers",
    "evm.gasEstimates",
    "evm.assembly"
]

# Offline mode (no remote compiler downloads)
offline = false

# Sparse mode (only compile files needed)
sparse_mode = true

# Invariant testing configuration
[invariant]
runs = 256
depth = 15
fail_on_revert = false
call_override = false
dictionary_weight = 80
include_storage = true
include_push_bytes = true

# Fuzz testing configuration
[fuzz]
runs = 256
max_test_rejects = 65536
seed = "0x3e8"
dictionary_weight = 40
include_storage = true
include_push_bytes = true 